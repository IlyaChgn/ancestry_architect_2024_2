// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/profile/usecases/profile.go

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	context "context"
	reflect "reflect"

	models "github.com/IlyaChgn/ancestry_architect_2024_2/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockProfileStorageInterface is a mock of ProfileStorageInterface interface.
type MockProfileStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockProfileStorageInterfaceMockRecorder
}

// MockProfileStorageInterfaceMockRecorder is the mock recorder for MockProfileStorageInterface.
type MockProfileStorageInterfaceMockRecorder struct {
	mock *MockProfileStorageInterface
}

// NewMockProfileStorageInterface creates a new mock instance.
func NewMockProfileStorageInterface(ctrl *gomock.Controller) *MockProfileStorageInterface {
	mock := &MockProfileStorageInterface{ctrl: ctrl}
	mock.recorder = &MockProfileStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileStorageInterface) EXPECT() *MockProfileStorageInterfaceMockRecorder {
	return m.recorder
}

// CreateProfile mocks base method.
func (m *MockProfileStorageInterface) CreateProfile(ctx context.Context, userID uint) (*models.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfile", ctx, userID)
	ret0, _ := ret[0].(*models.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfile indicates an expected call of CreateProfile.
func (mr *MockProfileStorageInterfaceMockRecorder) CreateProfile(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfile", reflect.TypeOf((*MockProfileStorageInterface)(nil).CreateProfile), ctx, userID)
}

// GetProfileByID mocks base method.
func (m *MockProfileStorageInterface) GetProfileByID(ctx context.Context, id uint) (*models.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileByID", ctx, id)
	ret0, _ := ret[0].(*models.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileByID indicates an expected call of GetProfileByID.
func (mr *MockProfileStorageInterfaceMockRecorder) GetProfileByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileByID", reflect.TypeOf((*MockProfileStorageInterface)(nil).GetProfileByID), ctx, id)
}

// UpdateProfile mocks base method.
func (m *MockProfileStorageInterface) UpdateProfile(ctx context.Context, profile *models.Profile) (*models.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", ctx, profile)
	ret0, _ := ret[0].(*models.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockProfileStorageInterfaceMockRecorder) UpdateProfile(ctx, profile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockProfileStorageInterface)(nil).UpdateProfile), ctx, profile)
}
